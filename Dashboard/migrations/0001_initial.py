# Generated by Django 5.1.2 on 2025-04-20 21:56

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='WebsiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_url', models.URLField(max_length=255)),
                ('auth_token', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('bonus', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('bank_account', models.JSONField(blank=True, null=True)),
                ('nin', models.CharField(blank=True, max_length=11, null=True)),
                ('bvn', models.CharField(blank=True, max_length=11, null=True, unique=True)),
                ('referral_bonus', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('first_deposit_reward_given', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('referred_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='WaecPinGenerator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serviceID', models.CharField(max_length=255)),
                ('ExamType', models.CharField(choices=[('WASSCE/GCE', 'WASSCE/GCE')], max_length=50)),
                ('phone_number', models.CharField(max_length=11)),
                ('quantity', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_response', models.JSONField(blank=True, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='waec_pin_generator', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TVService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tv_service', models.CharField(choices=[('DSTV', 'DStv'), ('GOTV', 'GOtv'), ('STARTIMES', 'Startimes'), ('SHOWMAX', 'Showmax')], default='DSTV', max_length=10)),
                ('data_response', models.JSONField(blank=True, null=True)),
                ('smartcard_number', models.CharField(blank=True, max_length=100, null=True)),
                ('iuc_number', models.CharField(blank=True, max_length=100, null=True)),
                ('action', models.CharField(blank=True, choices=[('renew', 'Renew Current Bouquet'), ('change', 'Change Bouquet')], max_length=100, null=True)),
                ('bouquet', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('startimes_smartcard', models.CharField(blank=True, max_length=100, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('showmax_type', models.CharField(blank=True, choices=[('full', 'Full - N2,900'), ('mobile_only', 'Mobile Only - N1,450'), ('sports_full', 'Sports Full - N6,300'), ('sports_mobile_only', 'Sports Mobile Only - N3,200')], max_length=20, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TV_Subscription', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('transfer', 'Transfer'), ('Airtime Purchase', 'Airtime Purchase'), ('Data Purchase', 'Data Purchase'), ('TV_Subscription', 'TV SUBSCRIPTION'), ('Electricity_Bill', 'Electricity Bill'), ('waec_pin_generator', 'WAEC PIN'), ('jamb_registration', 'JAMB Registration')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('product_name', models.CharField(blank=True, max_length=100, null=True)),
                ('unique_element', models.CharField(blank=True, max_length=20, null=True)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('data_plan', models.CharField(blank=True, max_length=100, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_transactions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MonnifyTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_reference', models.CharField(max_length=100, unique=True)),
                ('monnify_transaction_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_code', models.CharField(max_length=10)),
                ('account_number', models.CharField(max_length=20)),
                ('narration', models.CharField(default='User Bonus Withdrawal', max_length=255)),
                ('status', models.CharField(default='pending', max_length=20)),
                ('currency', models.CharField(default='NGN', max_length=5)),
                ('response_message', models.JSONField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JambRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serviceID', models.CharField(max_length=255)),
                ('exam_type', models.CharField(choices=[('Direct Entry (DE)', 'Direct Entry (DE)')], default='DE', max_length=20)),
                ('jamb_profile_id', models.CharField(max_length=50, verbose_name='JAMB Profile ID')),
                ('phone_number', models.CharField(max_length=11, verbose_name='Phone Number')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Amount')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_response', models.JSONField(blank=True, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jamb_registration', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'JAMB Registration',
                'verbose_name_plural': 'JAMB Registrations',
            },
        ),
        migrations.CreateModel(
            name='ElectricityBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serviceID', models.CharField(max_length=255)),
                ('meter_number', models.CharField(max_length=255)),
                ('meter_type', models.CharField(choices=[('Prepaid', 'Prepaid'), ('Postpaid', 'Postpaid')], max_length=50)),
                ('phone_number', models.CharField(max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data_response', models.JSONField(blank=True, null=True)),
                ('transaction_id', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Electricity_Bill', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BuyData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network', models.IntegerField(choices=[(1, 'MTN'), (2, 'GLO'), (3, '9MOBILE'), (4, 'AIRTEL')])),
                ('data_type', models.CharField(blank=True, choices=[('Glo Data', 'Glo Data'), ('Glo SME Data', 'Glo SME Data'), ('9mobile Data', '9mobile Data'), ('9mobile SME Data', '9mobile SME Data')], max_length=20, null=True)),
                ('mobile_number', models.CharField(max_length=11)),
                ('data_plan', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('request_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed')], default='failed', max_length=20)),
                ('data_response', models.JSONField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_purchases', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BuyAirtime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network', models.IntegerField(choices=[(1, 'MTN'), (2, 'GLO'), (3, '9MOBILE'), (4, 'AIRTEL')])),
                ('data_type', models.CharField(choices=[('VTU', 'VTU'), ('Share and Sell', 'Share and Sell')], max_length=20)),
                ('mobile_number', models.CharField(max_length=11)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bypass_validator', models.BooleanField(default=False)),
                ('request_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed')], default='failed', max_length=20)),
                ('airtime_response', models.JSONField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='airtime_purchases', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BankTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bank_code', models.CharField(default='025', max_length=10)),
                ('account_number', models.CharField(default='2417372510', max_length=20)),
                ('status', models.CharField(default='pending', max_length=20)),
                ('reference', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
